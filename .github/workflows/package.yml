---
# yamllint disable rule:line-length
name: package

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
    branches:
      - master

env:
  INFINITECOPY_DEBUG: "1"
  INFINITECOPY_NO_PASTE: "1"

jobs:
  build:
    name: ${{ matrix.buildname }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest

        python-version:
          - "3.13"

        include:
          - os: windows-latest
            buildname: Windows
            artifact-name: infinitecopy for Windows
            artifact-file: infinitecopy.exe
            command: ./infinitecopy.exe
            nuitka-arguments: --windows-icon-from-ico=infinitecopy.png --lto=no

          - os: ubuntu-latest
            buildname: Linux
            artifact-name: infinitecopy for Linux
            artifact-file: infinitecopy.bin
            command: ./infinitecopy.bin
            nuitka-arguments: --linux-onefile-icon=infinitecopy.png

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          submodules: false
          fetch-depth: 0

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Use Poetry
        uses: Gr1N/setup-poetry@v9

      - name: (Linux) Install dependencies
        if: runner.os == 'Linux'
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          retry_wait_seconds: 30
          max_attempts: 3
          command: >-
            sudo apt-get update -yq &&
            sudo apt-get install -yq
            libgirepository1.0-dev
            gcc
            libcairo2-dev
            pkg-config
            python3-dev
            gir1.2-atspi-2.0

      - name: Install dependencies
        run: poetry install --no-root --no-interaction --no-ansi

      - name: (Linux) Install runtime dependencies
        if: runner.os == 'Linux'
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          retry_wait_seconds: 30
          max_attempts: 3
          command: >-
            sudo apt-get update -yq &&
            sudo apt-get install -yq
            libgl1
            libxkbcommon0
            libegl1
            libopengl0
            weston

      - name: (No GUI) Test
        env:
          QT_QPA_PLATFORM: offscreen
        run: >-
          poetry run pytest
          --cov-config=.coveragerc
          --cov=infinitecopy
          --cov-report=term
          --verbose
          --capture=no

      - name: (Linux) Start X11
        if: runner.os == 'Linux'
        run: >-
          Xvfb :99 -screen 0 800x600x24 & sleep 5

      - name: (Linux/Wayland) Test
        if: runner.os == 'Linux'
        env:
          DISPLAY: ":99.0"
          QT_QPA_PLATFORM: wayland
          KWIN_OPENGL_INTERFACE: egl_wayland
        run: >-
          weston --socket=infinitecopy & sleep 5;
          export WAYLAND_DISPLAY=infinitecopy;
          export DISPLAY="";
          poetry run pytest
          --cov-config=.coveragerc
          --cov=infinitecopy
          --cov-report=term

      - name: (Windows) Test
        if: runner.os == 'Windows'
        run: >-
          poetry run pytest
          --cov-config=.coveragerc
          --cov=infinitecopy
          --cov-report=term

      - name: Use version from Git
        shell: bash
        run: ./update_version.sh

      - name: Create package
        env:
          PYTHONIOENCODING: utf-8
          LD_LIBRARY_PATH: /usr/local/lib/:$LD_LIBRARY_PATH
        run: >-
          poetry run python -m nuitka
          --onefile
          --standalone
          --python-flag=no_site
          --assume-yes-for-downloads
          --plugin-enable=pyside6
          --plugin-enable=anti-bloat
          --include-qt-plugins="sensible,sqldrivers,qml"
          --show-modules
          --show-scons
          --include-data-dir=qml=qml
          --disable-console
          ${{ matrix.nuitka-arguments }}
          infinitecopy

      - name: List package files
        shell: bash
        run: ls -lSh infinitecopy.dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-file }}
          if-no-files-found: error

      - name: Run smoke test
        shell: bash
        run: ./${{ matrix.artifact-file }} --version
